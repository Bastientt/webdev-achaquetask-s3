{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserService {\n  constructor(http) {\n    this.http = http;\n    this.url = \"http://localhost:3000/api\";\n  }\n  login(user) {\n    return this.http.post(`${this.url}/login`, user, {\n      withCredentials: true\n    });\n  }\n  logout() {\n    return this.http.post(`${this.url}/logout`, {}, {\n      withCredentials: true\n    });\n  }\n  isConnected() {\n    return this.http.get(`${this.url}/isConnected`, {\n      withCredentials: true\n    });\n  }\n  static #_ = this.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,WAAW;EAGtBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,QAAG,GAAW,2BAA2B;EAET;EAExCC,KAAK,CAACC,IAAU;IACd,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CAAO,GAAG,IAAI,CAACC,GAAG,QAAQ,EAAEF,IAAI,EAAE;MAACG,eAAe,EAAE;IAAI,CAAC,CAAC;EACjF;EAEAC,MAAM;IACJ,OAAO,IAAI,CAACN,IAAI,CAACG,IAAI,CAAO,GAAG,IAAI,CAACC,GAAG,SAAS,EAAE,EAAE,EAAE;MAACC,eAAe,EAAE;IAAI,CAAC,CAAC;EAChF;EAEAE,WAAW;IACT,OAAO,IAAI,CAACP,IAAI,CAACQ,GAAG,CAAO,GAAG,IAAI,CAACJ,GAAG,cAAc,EAAE;MAACC,eAAe,EAAE;IAAI,CAAC,CAAC;EAChF;EAAC;qBAfUP,WAAW;EAAA;EAAA;WAAXA,WAAW;IAAAW,SAAXX,WAAW;IAAAY,YAFV;EAAM","names":["UserService","constructor","http","login","user","post","url","withCredentials","logout","isConnected","get","factory","providedIn"],"sourceRoot":"","sources":["/home/sigeth/Documents/ISEN/Webdev/webdev-achaquetask-s3/frontend/src/app/service/user.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { User } from \"../model/user\";\nimport { Observable } from \"rxjs\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  private url: string = \"http://localhost:3000/api\";\n\n  constructor(private http: HttpClient) { }\n\n  login(user: User) {\n    return this.http.post<void>(`${this.url}/login`, user, {withCredentials: true});\n  }\n\n  logout() {\n    return this.http.post<void>(`${this.url}/logout`, {}, {withCredentials: true});\n  }\n\n  isConnected(): Observable<void> {\n    return this.http.get<void>(`${this.url}/isConnected`, {withCredentials: true});\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}